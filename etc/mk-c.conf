###
### Enable code coverage when MKCOVERAGE*=yes 
###

HOST_CC?=clang
HOST_CXX?=clang++
DISTCLEANFILES+=*.gcda *.gcno *.gcov

.if $(MKCOVERAGE:U"no")=="yes"
#       each .c gets a .gcno at compile time and .gcda at execution
#       --coverage includes -fprofile-arcs -ftest-coverage
#       -g includes debug info (as per https://llvm.org/docs/CommandGuide/llvm-cov.html )
#CFLAGS+=--coverage -g
CFLAGS+=--coverage -fprofile-instr-generate
#    I don't know what LDFLAGS should be - this is overkill, probably
#LDFLAGS+=--coverage -fprofile-instr-generate
#LDFLAGS+=--coverage -fprofile-instr-generate -fcoverage-mapping
#LDFLAGS+= -fprofile-instr-generate -fcoverage-mapping
LDFLAGS+=--coverage
.endif

.if $(MKCOVERAGE2:U"no")=="yes"
#      Generates default.profraw when program runs
CFLAGS+=-fprofile-instr-generate -fcoverage-mapping 
LDFLAGS+=-fprofile-instr-generate -fcoverage-mapping`
.endif

###
### Create tags files throughout the source tree.
###

#CPPFLAGS+=-Wuninitialized -Wunused-parameter -Wno-extended-offsetof -pedantic

TOOL_CTAGS?=ctags

.if make(tags)
MKCHECK=no
.endif

post_cleandir: clean-tags

ALLTARGETS+=tags
TARGETS+=tags

.PHONY: .Makefile.tags clean-tags run-tags-makefile

clean-tags:
	@rm -f $(.CURDIR)/tags $(.OBJDIR)/.Makefile.tags

do_tags: clean-tags .WAIT run-tags-makefile

.if defined(SUBPRJ_DFLT)
.error "SUBPRJ_DFLT=$(SUBPRJ_DFLT)"
.for dir in $(SUBPRJ_DFLT)
__TARGDIR := $(dir)
.if $(__TARGDIR) != ".WAIT"
SUBDIR_TAGS:=$(SUBDIR_TAGS) $(.CURDIR)/$(__TARGDIR)/tags
.endif
.endfor
.endif

.if defined(PROGS) || defined(LIB)

_ALLSRCS=$(SRCS:N*.o)
.for P in ${PROGS}
.if defined(SRCS.${P})
_ALLSRCS+=$(SRCS.${P})
.endif
.endfor

# ctags on BSD takes options -twd

run-tags-makefile: .Makefile.tags
	@$(MAKE) -C $(.CURDIR) -f $(.OBJDIR)/.Makefile.tags tags

clean-tags-makefile:
	@rm -f $(.OBJDIR)/.Makefile.tags

.for _S in $(_ALLSRCS:O:u)
tags-$(_S): $(_S)
	@$(CPP) $(CPPFLAGS) -MM -MT tags-$(_S) $(.ALLSRC) >> $(.OBJDIR)/.Makefile.tags
	@echo >> $(.OBJDIR)/.Makefile.tags
.endfor

.Makefile.tags: clean-tags-makefile .WAIT $(_ALLSRCS:O:u:C,^,tags-,)
.for _S in $(_ALLSRCS:O:u)
	@echo "tags: tags-$(_S)" >> $(.OBJDIR)/.Makefile.tags
	@echo >> $(.OBJDIR)/.Makefile.tags
	@echo "tags-$(_S): .PHONY" >> $(.OBJDIR)/.Makefile.tags
	@echo "	@$(TOOL_CTAGS) -a -f \$$(.CURDIR)/tags \$$(.ALLSRC:tA)" >> $(.OBJDIR)/.Makefile.tags
	@echo >> $(.OBJDIR)/.Makefile.tags
	@echo ".PATH: $(.PATH)" >> $(.OBJDIR)/.Makefile.tags
.endfor

.else
run-tags-makefile:
	@touch $(.CURDIR)/tags

.endif

do_tags:
	@LC_ALL=C sort -m -o $(.CURDIR)/tags $(.CURDIR)/tags $(SUBPRJ_DFLT:N.WAIT:C,^,$(.CURDIR)/,:C,$,/tags,)
#	@sort -s -u -m -o $(.CURDIR)/tags $(.CURDIR)/tags $(SUBDIR_TAGS:U)
