Copyright (c) 2016, 2017, 2018 Runtime Verification, Inc.  All rights reserved.

`lpcq` is a POSIX Threads-using C program that sends some numbers from
a producer thread to a consumer thread through a queue.  The program
demonstrates RV-Predict/C's capability to detect races on a linked
producer-consumer queue library.  The library itself does not provide
any synchronization.  Library users must synchronize access to a queue,
otherwise two or more threads accessing the same queue will corrupt it.

# Sources

lpcq.h		the library's type and function declarations
lpcq.c		the library's implementation
lpcq_main.c	the test driver
signal.c	sources for establishing signals and signal masks
signal.h

# Compilation

Using rvpc, a wrapper for clang that adds RV-Predict instrumentation, run

	rvpc -o lpcq lpcq.c lpcq_main.c signals.c

That produces an executable binary, `lpcq`.

# Exploring RV-Predict with `lpcq`.

If you run `lpcq` like this, RV-Predict will detect races, and `lpcq`
may even crash because of queue corruption or a timeout:

	./lpcq

Run `lpcq` like this to protect the queue with a POSIX Threads (pthreads)
mutex.  No data races will be detected, and the program will run to
completion every time:

	./lpcq -l

RV-Predict is capable of detecting data races that involve a thread and
a signal handler.  Run `lpcq` with the `-s` option to make it add items
to the queue in a signal handler instead of in a thread.  Run this, and
RV-Predict will detect a race between a thread and signal:

	./lpcq -s -n 15

Add the `-m` option to tell `lpcq` to mask the signal that adds queue
items while it consumes queue items.  That protects against data races.
RV-Predict will detect no races when you run this:

	./lpcq -s -n 15 -m

# Other lpcq options

-n <items>	<items> is a decimal number.  `lpcq` will produce and
		consume <items> queue items.

# Example outputs

## When a mutex synchronizes the producer and consumer threads'
## access to the queue, RV-Predict detects no races.

	$ ./lpcq -l
	locking enabled
	read item 0
	read item 1
	read item 2
	read item 3
	read item 4
	[RV-Predict] No races found.

## Without synchronization, the producer and consumer thread race
## to update queue elements.  Sometimes the race is harmless.

	$ ./lpcq 
	read item 0
	read item 1
	read item 2
	read item 3
	read item 4
	Data race on [0x0000000000bd1fe0]:
	    Concurrent read in thread T2
	      > in lpcq_get at .../c11/lpcq.c:34:2
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in thread T1
	      > in lpcq_put at .../c11/lpcq.c:49
		in lpcq_put at .../c11/lpcq.c:43
		in produce at .../c11/lpcq_main.c:157
		in main at .../c11/lpcq_main.c:181
	    T1 is the main thread


	Data race on q.tailp at lpcq_main.c;main:
	    Concurrent read in thread T2
	      > in lpcq_get at .../c11/lpcq.c:26:19
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in thread T1
	      > in lpcq_put at .../c11/lpcq.c:48
		in lpcq_put at .../c11/lpcq.c:43
		in produce at .../c11/lpcq_main.c:157
		in main at .../c11/lpcq_main.c:181
	    T1 is the main thread


## Sometimes the race corrupts the queue.  `lpcq` eventually crashes.
Ordinarily, races are still reported.

	$ ./lpcq 
	read item 0
	read item 2
	read item 3
	read item 4
	Segmentation fault
	.                      .
	.  race reports follow .
	.                      .

## `lpcq` reports races with a signal handler 

	$ ./lpcq -n 15 -s 
	read item 0
	read item 1
	read item 2
	read item 3
	read item 4
	read item 5
	read item 6
	read item 7
	read item 8
	read item 9
	read item 10
	read item 11
	read item 12
	read item 13
	read item 14
	Data race on [0x00007ffe6febc0c0]:
	    Concurrent read in thread T2
	      > in lpcq_get at .../c11/lpcq.c:31:7
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:49
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:31:7
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230


	Data race on [0x00007ffe6febc0c8]:
	    Concurrent write in thread T2
	      > in lpcq_get at .../c11/lpcq.c:36
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent read in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:47:19
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:36
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230


	Data race on [0x00007ffe6febc0c8]:
	    Concurrent read in thread T2
	      > in lpcq_get at .../c11/lpcq.c:26:19
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:48
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:26:19
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230


	Data race on [0x0000000000fa0ff0]:
	    Concurrent read in thread T2
	      > in lpcq_get at .../c11/lpcq.c:34:2
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:46
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:34:2
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230


	Data race on [0x00007ffe6febc0c8]:
	    Concurrent read in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:47:19
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.
	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:48
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:26:19
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230


	Data race on i at lpcq_main.c;handler:
	    Concurrent read in signal SIGALRM
	      > in handler at .../c11/lpcq_main.c:137
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:31:7
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in handler at .../c11/lpcq_main.c:138
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.

	Data race on [0x00007ffe6febc0c8]:
	    Concurrent read in thread T2
	      > in lpcq_get at .../c11/lpcq.c:35:15
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:48
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.

	Data race on i at lpcq_main.c;handler:
	    Concurrent read in signal SIGALRM
	      > in handler at .../c11/lpcq_main.c:138
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:35:15
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in handler at .../c11/lpcq_main.c:138
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.

	Data race on [0x00007ffe6febc0c0]:
	    Concurrent write in thread T2
	      > in lpcq_get at .../c11/lpcq.c:34
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:49
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.

	Data race on [0x00007ffe6febc0c0]:
	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:49
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.
	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:49
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:26:19
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230


	Data race on [0x00007ffe6febc0c8]:
	    Concurrent write in thread T2
	      > in lpcq_get at .../c11/lpcq.c:36
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:48
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.

	Data race on [0x00007ffe6febc0c8]:
	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:48
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T1
	 before any event.
	    Concurrent write in signal SIGALRM
	      > in lpcq_put at .../c11/lpcq.c:48
		in lpcq_put at .../c11/lpcq.c:43
		in handler at .../c11/lpcq_main.c:133
	    Interrupting thread T2
	      > in lpcq_get at .../c11/lpcq.c:26:19
		in lpcq_get at .../c11/lpcq.c:25
		in consume at .../c11/lpcq_main.c:75
	    T2 is created by T1
		in main at .../c11/lpcq_main.c:230

