According to ISO C11, it is implementation-defined behavior to convert a non-zero integer to a pointer. This occurs either with an explicit cast or an implicit conversion from one type to another (e.g. via an assignment expression or initialization). In practice, as implementation-defined behavior, the platform is required to document the behavior that occurs in this case. The resulting pointer might not be correctly aligned, might not point to an entity of the referenced type, and might be a trap representation. The solution is to either rely on the behavior of the platform, or, if the program should be strictly conforming, to ensure that no non-zero integer is converted to a pointer.
