According to ISO C11, it is undefined behavior for the same identifier to be declared with different, incompatible types, in different translation units. In practice, this can lead to incorrect accesses on shared data that corrupts the value of a shared variable, or to further undefined behavior such as violations of strict aliasing, function call compatibility, etc. The solution is that every translation unit that declares an object with external linkage that denotes the same object must declare it with compatible types.
