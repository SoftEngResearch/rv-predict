According to ISO C11, the value of a pointer after the object pointed to ends its lifetime is indeterminate. In practice this means it is generally a trap representation and therefore reading the value of the pointer is undefined behavior. This includes evaluating the value of a pointer that points to an automatic or thread local variable after it has gone out of scope or the thread has ended respectively, even if another object declared by the same statement and at the same address is currently alive. It also includes reading the value of a pointer variable that points to allocated storage after a call to free has been made. Because the value of the pointer in this case is a trap representation, it is undefined even if the pointer is not dereferenced. The solution if you wish to reference the object is to do it before the lifetime has ended, and the solution if you wish to read the pointer after its value has gone out of scope is to first write the null pointer to the variable.
