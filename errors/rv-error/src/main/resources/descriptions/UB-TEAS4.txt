According to ISO C11, if the value of a void expression is used in any way (as opposed to being discarded after evaluated for side effects), the behavior is undefined. This is generally a compile time error, and therefore should be caught by the compiler. However, since it is undefined behavior, it is not strictly required by the C standard that a diagnostic be emitted for this case, and therefore it is possible that some C compilers will accept such programs and emit some kind of undesirable code. The solution is to avoid using void expressions except in contexts where the value of the expression is being discarded (i.e. in an expression statement, in the left hand side of a comma operator, or in certain other contexts).
