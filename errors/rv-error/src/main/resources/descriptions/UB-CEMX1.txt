According to ISO C11, if the second operand of a division operation is 0, the behavior is undefined. In practice this generally leads to abnormal program termination, but it can also go into a trap handler or raise a signal instead, depending on the platform. It is also possible on platforms with IEEE 754 floats to silently continue with an infinite or NaN value on floating point division by zero, corrupting future arithmetic data. The solution is that if the second operand can be zero, to check for zero division explicitly and handle it separately.
