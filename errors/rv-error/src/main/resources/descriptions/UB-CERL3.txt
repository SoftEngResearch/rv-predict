According to ISO C11, if two pointers not part of the same array object are compared using the > operator, the behavior is undefined. It is worth noting that the definition of "array object" in this case includes both scalars, which are treated in this context identically to an array of length 1, and struct and union fields, which are treated as objects in their own right and therefore identically to an object of the same type which is not a subobject of a struct or union. Thus it is undefined behavior to compare two pointers to two different struct fields. If you wish to compare the offsets within the struct, it is recommended that you compute the offsets using the offsetof macro and then perform the comparison over their integer offsets. In general, the solution is to always be aware of what objects the operands of ordered pointer comparison come from and never compare pointers unless they are known to be from the same array object.
