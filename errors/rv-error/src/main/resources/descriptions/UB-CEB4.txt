According to ISO C11, left shifting a negative value in a signed type is undefined. This is because the underlying bits of negative numbers are unspecified and therefore the value of the operation is dependent on the platform and the code generated by the compiler. The portable solution is to convert to the corresponding unsigned type prior to performing the left shift, and convert back afterwards. Note that this still generates a value dependent on the underlying representation of negative numbers and is therefore still implementation defined. In general it is not possible to perform bitwise shift operations that depend on the representation of negative numbers in a strictly conforming application.
