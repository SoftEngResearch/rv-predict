According to ISO C11, when performing an assignment, if the assignment is writing a value to the left hand side which overlaps its storage with the value read on the right hand side, and the overlap between the two objects is not exact (i.e., beginning and ending at the same byte), the behavior is undefined. In practice, such assignment expressions may lead to incorrect and inconsistent program state on some platforms, depending on the instructions generated for the assignment. The solution is to declare a temporary variable, store the value read in the temporary, and then write it to the value being written.
