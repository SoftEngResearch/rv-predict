According to ISO C11, if an lvalue to rvalue conversion is performed on an array declared with the register storage class, the behavior is undefined. This is because the compiler may choose to store the array in registers, and thus the array would not have an address. Generally speaking, modern compilers make efficient choices about what variables to store in registers, and therefore use of the register keyword is discouraged. However, an array can be declared as register so long as the lvalue of the array is never converted to an rvalue.
