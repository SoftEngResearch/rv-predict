According to ISO C11, it is an error for a function to be called with arguments if it is defined without parameters. This is generally a compile-time error, however, it can also occur as a memory corruption error if the user misunderstands the C language syntax of function declarations. A function declaration with no tokens in between the opening and closing parentheses declares a function with an unspecified number of arguments. In order to declare a function accepting no arguments, it must either be a function definition, or you must provide the void token in between the opening and closing parenthesis.If this is consistently done, then the compiler can check the number of arguments to all functions and report a compile-time error if a function with no parameters was called with arguments.
