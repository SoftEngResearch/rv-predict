According to ISO C11, if the mathematical value of an arithmetic expression producing a floating point result can not be represented in the result type, the behavior is undefined. In practice, this error can lead to propagating arithmetic errors throughout any floating-point computation that uses the result of the expression. On systems supporting IEEE 754 arithmetic, the result of such an expression is either a positive or negative infinite value, or else SIGFPE is raised. Thus, depending on how the floating point exceptions are configured in your application, and depending on your signal handler's behavior, this error can also lead to abnormal program termination. In general, code must be written in order to ensure that the value of arithmetic expressions cannot overflow based on the range of possible values for the variable and the range of values for the type of the result of the expression.
