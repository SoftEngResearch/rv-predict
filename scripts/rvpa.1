.Dd July 19, 2018
.Dt RVPA 1
.Os Linux
.Sh NAME
.Nm rvpa
.Nd analyze a trace file produced by a program compiled with
.Tn RV-Predict/C
instrumentation using
.Xr rvpc 1
.Sh SYNOPSIS
.Nm 
.Op Fl h
.Op Fl n
.Op Fl Fl help
.Op Fl Fl window Ar size
.Op Fl Fl html-dir Ar directory
.Op Fl Fl interrupts-target Ar number
.Op Fl Fl max-interrupt-depth Ar depth 
.Op Fl Fl no-shorten
.Op Fl Fl no-symbol
.Op Fl Fl no-system
.Op Fl Fl no-trim
.Op Fl Fl output=...
.Op Fl -
.Ar program
.Op Ar trace-file
.Sh DESCRIPTION
.Nm
analyzes a trace file left by
.Ar program Ap s
.Tn RV-Predict/C
instrumentation.
.Nm
reports any data races that it predicts on stderr.
.Pp
.Ar program
is used as a source for the DWARF debugging information
that
.Nm
needs to convert data & instruction addresses to names in its reports.
.Pp
If the optional argument
.Ar trace-file
is provided, then
.Nm
analyzes that trace file.
Otherwise,
.Nm
analyzes the trace file
.Pa rvpredict.trace 
left in the current directory by
.Ar program .
.Pp
Command-line options modify the behavior of
.Nm :
.Bl -tag -width "mmprompt-for-license"
.It Fl h | Fl Fl help
Print a help message and exit immediately.
.It Fl n
Print the Java command that would be run.
Perform no analysis.
.It Fl Fl html-dir Ar directory | Fl Fl html-dir Ns = Ns Ar directory
Reports will be written in HTML format under
.Ar directory .
.Pp
Each
.Fl Fl html-dir
parameter overrides all previous
.Fl Fl html-dir
and
.Fl Fl output
parameters on the command line.
.It Fl Fl max-interrupt-depth Ar depth | Fl Fl max-interrupt-depth Ns = Ns Ar depth
In each trace window, look for schedules where interrupts
.Dq stack
no more than
.Ar depth
deep, or no deeper than the trace events in that window actually show,
whichever is deeper.
A
.Ar depth
of 0 means no maximum.
A
.Ar depth
of 1 means an interruption of a thread, a
.Ar depth
of 2 means an interruption of an interruption of a thread, and so on.
.It Fl Fl interrupts-target Ar number | Fl Fl interrupt-target Ar number
.It Fl Fl interrupts-target Ns = Ns Ar number | Fl Fl interrupt-target Ns = Ns Ar number 
If there are fewer than
.Ar number
occurrences of any interrupt
.Va I
in a window
.Va W ,
then
.Tn RV-Predict/C
will copy occurrences of
.Va I
from prior windows into window
.Va W
until either there are
.Ar number
occurrences in
.Va W
or there are no more occurrences to copy.
.Pp
The default setting of
.Ar number
is 0:
no occurrences are copied from prior windows.
Increasing
.Ar number
can improve the prediction power of
.Tn RV-Predict/C ,
however, it will also prolong computation for each window.
.It Fl Fl window Ar size | Fl Fl window Ns = Ns Ar size
.Tn RV-Predict/C
segments
.Ar program Ap s
event trace into
.Dq windows
and analyzes one window at a time.
Windows are measured in the number of events they contain.
This option sets the number of events per window to
.Ar size ;
the default is 2000.
.Pp
There is a trade-off between prediction power and computation
time:
short windows take less time to analyze than long windows, however,
.Tn RV-Predict/C
may predict fewer data races using short windows than using long
windows on the same trace.
.It Fl Fl no-shorten
in reports,
long paths to source files are not shortened by replacing the first 
path components with an ellipsis,
.Dq ... .
.It Fl Fl no-symbol
disables symbolization altogether: instruction & data addresses
are not converted to file names, line and column numbers.
Signal numbers are not converted to symbols such as
.Dv SIGINT
and
.Dv SIGSEGV .
When
.Fl Fl no-symbol
is passed, options
.Fl Fl no-shorten ,
.Fl Fl no-system ,
and
.Fl Fl no-trim
have no effect.
.It Fl Fl no-system
stack frames in system libraries or header files are not elided. 
See
.Sx BUGS .
.It Fl Fl no-trim
stops
.Tn RV-Predict/C 
from eliding all stack frames under
.Fn main ,
all frames under a thread's
.Fn start_routine ,
and all frames under a signal handler.
.It Fl Fl output=console|csv|json|raw
indicates the desired report format.
.Dq console
is the default.
.Dq json
produces a report in JSON format that is suitable for
.Xr rv-html-report
to read.
.Dq csv
produces a table of comma-separated values, CSV, suitable
for import into spreadsheets and relational databases.
.Dq raw
produces unrefined JSON:
.Nm
performs no symbolization, no eliding of system frames, no trimming of
pathnames, regardless of the other settings on the command line.
.Pp
Each
.Fl Fl html-dir
parameter overrides all previous
.Fl Fl html-dir
and
.Fl Fl output
parameters on the command line.
.It Fl -
indicates the last option
for
.Nm .
Subsequent command-line words are treated
like the executable that
.Nm
should analyze.
.Fl -
is useful for analyzing an executable whose name
begins with
.Fl - .
.El
.\" This next command is for sections 1, 6, 7 and 8 only.
.Sh ENVIRONMENT
.Bl -tag -width "RVP_TRACE_FILE"
.It Ev RVP_TRACE_FILE
.Nm
ignores the setting of
.Ev RVP_TRACE_FILE
in the user's environment.
.It Ev RVP_ANALYSIS_ARGS
.Nm
treats the content of
.Ev RVP_ANALYSIS_ARGS
as if it appeared at the beginning of its command-line arguments.
Actual command-line arguments will override the arguments 
set by
.Ev RVP_ANALYSIS_ARGS .
.It Ev RVP_WINDOW_SIZE
.Nm
treats this as the default window size.
.Ev RVP_WINDOW_SIZE takes precedence over window-size arguments in
.Ev RVP_ANALYSIS_ARGS ,
however, it may be overridden with a command-line argument.
.Op Fl Fl window Ar size
on the command line.
.It Ev RVP_REPORT_FILE
.Nm
writes its report to the file named by
.Ev RVP_REPORT_FILE ,
if the variable is set in the environment.
.Nm
quits with an error if both 
.Ev RVP_REPORT_FILE
and
.Ev RVP_REPORT_FD
are set in the environment.
.It Ev RVP_REPORT_FD
.Nm
writes its report to the file descriptor given by
.Ev RVP_REPORT_FD ,
if the variable is set in the environment.
.Nm
quits with an error if both 
.Ev RVP_REPORT_FILE
and
.Ev RVP_REPORT_FD
are set in the environment.
.El
.Sh FILES
.Bl -tag -width "/usr/share/examples/rv-predict-c/"
.It Pa rvpredict.trace
.Nm
looks in the directory where it is run for a trace file by this
name.
.It Pa /usr/share/doc/rv-predict-c/USERS-MANUAL.md
.Tn RV-Predict/C
Users Manual
.It Pa /usr/share/rv-predict-c/rv-predict.jar
the Java program implementing
.Tn RV-Predict/C
data-race prediction
.El
.Sh EXAMPLES
Build the demonstration program
called
.Nm lpcq
in
.Pa /usr/share/examples/rv-predict-c/c11
with
.Tn RV-Predict/C
instrumentation:
.Bd -literal
$ rvpc -o lpcq lpcq.c lpcq_main.c signals.c
.Ed
.Pp
Run it, and look for the trace file:
.Bd -literal
$ ./lpcq
read item 0
read item 1
read item 2
read item 3
read item 4
$ ls -l rvpredict.trace 
-rw------- 1 johndoe johndoe 6164 Jul 19 17:27 rvpredict.trace
.Ed
.Pp
Finally, analyze the trace:
.Bd -literal
$ rvpa ./lpcq
Data race on q.tailp at lpcq_main.c;main:
    Read in thread 2
      > in lpcq_get at .../c11/lpcq.c:26:19
        in consume at .../c11/lpcq_main.c:104
    Thread 2 created by thread 1
        in main at .../c11/lpcq_main.c:230

    Write in thread 1
      > in lpcq_put at .../c11/lpcq.c:48
        in produce at .../c11/lpcq_main.c:164
        in main at .../c11/lpcq_main.c:243
    Thread 1 is the main thread


Data race on [0x0000000000612080]:
    Read in thread 2
      > in lpcq_get at .../c11/lpcq.c:34:2
        in consume at .../c11/lpcq_main.c:104
    Thread 2 created by thread 1
        in main at .../c11/lpcq_main.c:230

    Write in thread 1
      > in lpcq_put at .../c11/lpcq.c:49
        in produce at .../c11/lpcq_main.c:164
        in main at .../c11/lpcq_main.c:243
    Thread 1 is the main thread
.Ed
.Pp
Several example programs are in
.Pa /usr/share/examples/rv-predict-c/ .
.Sh EXIT STATUS
If
.Nm
cannot parse its arguments, it returns 1.
If
.Nm
cannot find a
.Tn Java 
runtime, it returns 2.
.Nm
returns 3 if it finds
.Tn Java ,
but the version is not late enough.
.Sh SEE ALSO
.Xr rvpc 1 ,
.Xr rvpx 1
.Sh HISTORY
.Tn RV-Predict/C
1.9 was released in February 2018.
.Pp
.Tn RV-Predict/C
2.0 was released in July 2018.
.Sh AUTHORS
.An "Runtime Verification, Inc." Aq support@runtimeverification.com
.Sh BUGS
In this release, stack frames in system libraries and header files are
always symbolized, so the option
.Fl Fl no-system
has no effect.
