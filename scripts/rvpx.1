.Dd July 20, 2017
.Dt RVPX 1
.Os Linux
.Sh NAME
.Nm rvpx
.Nd run a program compiled by
.Xr rvpc 1
and analyze its trace
.Sh SYNOPSIS
.Nm 
.Op Fl Fl prompt-for-license
.Op Fl Fl window Ar size
.Op Fl Fl no-shorten
.Op Fl Fl no-signal
.Op Fl Fl no-symbol
.Op Fl Fl no-system
.Op Fl Fl no-trim
.Op Fl -
.Ar program
.Sh DESCRIPTION
.Nm
runs a program built with
.Tn RV-Predict/C
instrumentation by
.Xr rvpc 1 ,
redirecting its trace to a temporary file.
After the program has quit,
.Nm
analyzes the trace file and reports data races on stderr.
Finally,
.Nm
deletes the temporary file.
.Pp
Command-line options modify the behavior of
.Nm :
.Bl -tag -width "mmprompt-for-license"
.It Fl Fl prompt-for-license
if this option is on the command line, and
.Tn RV-Predict/C
cannot find a valid license key, then it will ask for the user's email
address and password and try to download a new key.
Otherwise, if there is not a valid license key,
.Nm
aborts the analysis.
.It Fl Fl window Ar size
.Tn RV-Predict/C
segments
.Ar program Ap s
event trace into "windows" and analyzes one window at a time.
Windows are measured in the number of events they contain.
This option sets the number of events per window to
.Ar size ;
the default is 2000.
.Pp
There is a trade-off between prediction power and computation
time:
short windows take less time to analyze than long windows, however,
.Tn RV-Predict/C
may predict fewer data races using short windows than using long
windows on the same trace.
.It Fl Fl no-shorten
in reports,
long paths to source files are not shortened by replacing the first 
path components with an ellipsis, "...".
.It Fl Fl no-signal
disables symbolization of signal numbers: e.g., S1 is not converted to
.Dv SIGHUP .
.It Fl Fl no-symbol
disables symbolization altogether: instruction & data addresses
are not converted to file names, line and column numbers.
Signal numbers are not converted to symbols such as
.Dv SIGINT
and
.Dv SIGSEGV .
When
.Fl Fl no-symbol
is passed, options
.Fl Fl no-shorten ,
.Fl Fl no-signal ,
.Fl Fl no-system ,
and
.Fl Fl no-trim
have no effect.
.It Fl Fl no-system
stack frames in system libraries or header files are not elided. 
See
.Sx BUGS .
.It Fl Fl no-trim
stops
.Tn RV-Predict/C 
from eliding all stack frames under
.Fn main ,
all frames under a thread's
.Fn start_routine ,
and all frames under a signal handler.
.It Fl -
indicates the last option
for
.Nm .
Subsequent command-line words are treated
like the command that
.Nm
should run.
.Fl -
is useful for running a command whose name
begins with
.Fl - .
.El
.\" This next command is for sections 1, 6, 7 and 8 only.
.Sh ENVIRONMENT
.Nm
uses
.Ev RVP_TRACE_FILE
for its own purposes, overriding any setting in the user's environment.
.Sh FILES
.Bl -tag -width "/usr/share/examples/rv-predict-c/"
.It Pa /usr/share/doc/rv-predict-c/USERS-MANUAL.md
.Tn RV-Predict/C
Users Manual
.It Pa /usr/share/rv-predict-c/rv-predict.jar
the Java program implementing
.Tn RV-Predict/C
data-race prediction
.El
.Sh EXAMPLES
Build the demonstration program
called
.Nm lpcq
in
.Pa /usr/share/examples/rv-predict-c/c11
with
.Tn RV-Predict/C
instrumentation:
.Bd -literal
$ rvpc -o lpcq lpcq.c lpcq_main.c signals.c
.Ed
.Pp
Run it with
.Nm
to produce data-race reports:
.Bd -literal
$ rvpx ./lpcq
read item 0
read item 1
read item 2
read item 3
read item 4
Data race on q.tailp at lpcq_main.c;main:
    Read in thread 2
      > in lpcq_get at .../c11/lpcq.c:26:19
        in consume at .../c11/lpcq_main.c:104
    Thread 2 created by thread 1
        in main at .../c11/lpcq_main.c:230

    Write in thread 1
      > in lpcq_put at .../c11/lpcq.c:48
        in produce at .../c11/lpcq_main.c:164
        in main at .../c11/lpcq_main.c:243
    Thread 1 is the main thread


Data race on [0x0000000000612080]:
    Read in thread 2
      > in lpcq_get at .../c11/lpcq.c:34:2
        in consume at .../c11/lpcq_main.c:104
    Thread 2 created by thread 1
        in main at .../c11/lpcq_main.c:230

    Write in thread 1
      > in lpcq_put at .../c11/lpcq.c:49
        in produce at .../c11/lpcq_main.c:164
        in main at .../c11/lpcq_main.c:243
    Thread 1 is the main thread
.Ed
.Pp
Several example programs are in
.Pa /usr/share/examples/rv-predict-c/ .
.Sh EXIT STATUS
If
.Nm
cannot parse its arguments, it returns 1.
If
.Ar program
is not found,
.Nm
returns 127.
If
.Ar program
is found, but it is not executable, then
.Nm
returns 126.
Otherwise,
.Nm
returns the exit value of
.Ar program .
.Sh SEE ALSO
.Xr rvpa 1 ,
.Xr rvpc 1
.Sh HISTORY
.Tn RV-Predict/C
2.0 was released in July 2017.
.Sh AUTHORS
.\" .An "Yilong Li"
.\" .An "Traian Serbanuta"
.\" .An "Virgil Serbanuta"
.\" .An "David Young" Aq david.young@runtimeverification.com
.An "Runtime Verification, Inc." Aq support@runtimeverification.com
.Sh BUGS
In this release, stack frames in system libraries and header files are
always symbolized, so the option
.Fl Fl no-system
has no effect.
