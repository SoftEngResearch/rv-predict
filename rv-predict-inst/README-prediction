-- OUTDATED -- 

Runtime Verification Prediction
-------------------------------

This README is the usage manual for prediction of races in the Runtime
Verification framework (prediction of arbitrary properties will work shortly).
All instructions assume a POSIX compliant OS (Linux, OS X, FreeBSD, etc).
We assume that the user is using java 1.6.

-- Contents
The bin directory contains the sh script for running the prediction framework.

The examples/prediction directory contains examples for prediction, and a README
describing the arguments for the different examples.

The lib directory contains the necessary jar files to run the system.

-- Running

Prediction is more automated than monitoring and doesn't require you to install
AspectJ or set up shell variables or anything.

Running bin/rv-predict <class path prepend> <class file to predict> is all that
is necessary. Note however, that the memory limits for the JVM may need to be
increased in the rv-predict script for very large programs.

Run "rv-predict -h" for more information.

RV Prediction runs through these phases:

Instrumentation    - The program is instrumented using soot.
Logging            - The instrumented program is run to collect execution logs.
Slicing            - This slices the trace for each shared variable (for race
                     prediction). Each shared variable is printed to stdout as
                     slicing occurs. For some programs this results in quite a
                     bit of output.
Vector Clocking    - A causal order is calculated using vector clocks.
Prediction         - Prediction occurs. For race detection this consists of a
                     read-write or write-write conflict to a shared variable
                     that occurs with incomparable vector clocks.

-- Examples

Examples can be found in the examples/prediction directory, and there is a
README.predictor.examples file there with information on how to run each of
them. For instance to run a simple test one could do the following in the main
directory

Example> bin/rv-predict -cp-prepend examples/prediction simple.Simple
