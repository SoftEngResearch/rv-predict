// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rvpredict/logging/predictor.proto

package rvpredict.logging;

public final class Protos {
  private Protos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Events extends
      com.google.protobuf.GeneratedMessage {
    // Use Events.newBuilder() to construct.
    private Events() {
      initFields();
    }
    private Events(boolean noInit) {}
    
    private static final Events defaultInstance;
    public static Events getDefaultInstance() {
      return defaultInstance;
    }
    
    public Events getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Events_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Events_fieldAccessorTable;
    }
    
    // repeated .rvpredict_events.Event event = 1;
    public static final int EVENT_FIELD_NUMBER = 1;
    private java.util.List<rvpredict.logging.Protos.Event> event_ =
      java.util.Collections.emptyList();
    public java.util.List<rvpredict.logging.Protos.Event> getEventList() {
      return event_;
    }
    public int getEventCount() { return event_.size(); }
    public rvpredict.logging.Protos.Event getEvent(int index) {
      return event_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (rvpredict.logging.Protos.Event element : getEventList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (rvpredict.logging.Protos.Event element : getEventList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (rvpredict.logging.Protos.Event element : getEventList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static rvpredict.logging.Protos.Events parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Events parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Events parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Events parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Events parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Events parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Events parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Events parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Events parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Events parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rvpredict.logging.Protos.Events prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private rvpredict.logging.Protos.Events result;
      
      // Construct using rvpredict.logging.Protos.Events.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new rvpredict.logging.Protos.Events();
        return builder;
      }
      
      protected rvpredict.logging.Protos.Events internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new rvpredict.logging.Protos.Events();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rvpredict.logging.Protos.Events.getDescriptor();
      }
      
      public rvpredict.logging.Protos.Events getDefaultInstanceForType() {
        return rvpredict.logging.Protos.Events.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public rvpredict.logging.Protos.Events build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private rvpredict.logging.Protos.Events buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public rvpredict.logging.Protos.Events buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.event_ != java.util.Collections.EMPTY_LIST) {
          result.event_ =
            java.util.Collections.unmodifiableList(result.event_);
        }
        rvpredict.logging.Protos.Events returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rvpredict.logging.Protos.Events) {
          return mergeFrom((rvpredict.logging.Protos.Events)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rvpredict.logging.Protos.Events other) {
        if (other == rvpredict.logging.Protos.Events.getDefaultInstance()) return this;
        if (!other.event_.isEmpty()) {
          if (result.event_.isEmpty()) {
            result.event_ = new java.util.ArrayList<rvpredict.logging.Protos.Event>();
          }
          result.event_.addAll(other.event_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              rvpredict.logging.Protos.Event.Builder subBuilder = rvpredict.logging.Protos.Event.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEvent(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .rvpredict_events.Event event = 1;
      public java.util.List<rvpredict.logging.Protos.Event> getEventList() {
        return java.util.Collections.unmodifiableList(result.event_);
      }
      public int getEventCount() {
        return result.getEventCount();
      }
      public rvpredict.logging.Protos.Event getEvent(int index) {
        return result.getEvent(index);
      }
      public Builder setEvent(int index, rvpredict.logging.Protos.Event value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.event_.set(index, value);
        return this;
      }
      public Builder setEvent(int index, rvpredict.logging.Protos.Event.Builder builderForValue) {
        result.event_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEvent(rvpredict.logging.Protos.Event value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.event_.isEmpty()) {
          result.event_ = new java.util.ArrayList<rvpredict.logging.Protos.Event>();
        }
        result.event_.add(value);
        return this;
      }
      public Builder addEvent(rvpredict.logging.Protos.Event.Builder builderForValue) {
        if (result.event_.isEmpty()) {
          result.event_ = new java.util.ArrayList<rvpredict.logging.Protos.Event>();
        }
        result.event_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEvent(
          java.lang.Iterable<? extends rvpredict.logging.Protos.Event> values) {
        if (result.event_.isEmpty()) {
          result.event_ = new java.util.ArrayList<rvpredict.logging.Protos.Event>();
        }
        super.addAll(values, result.event_);
        return this;
      }
      public Builder clearEvent() {
        result.event_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rvpredict_events.Events)
    }
    
    static {
      defaultInstance = new Events(true);
      rvpredict.logging.Protos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rvpredict_events.Events)
  }
  
  public static final class Event extends
      com.google.protobuf.GeneratedMessage {
    // Use Event.newBuilder() to construct.
    private Event() {
      initFields();
    }
    private Event(boolean noInit) {}
    
    private static final Event defaultInstance;
    public static Event getDefaultInstance() {
      return defaultInstance;
    }
    
    public Event getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Event_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Event_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      Branch(0, 0),
      MethodBegin(1, 1),
      MethodEnd(2, 2),
      ClassInitBegin(3, 3),
      ClassInitEnd(4, 4),
      Lock(5, 5),
      Unlock(6, 6),
      Access(7, 7),
      MOPEvent(8, 8),
      InstanceInvoke(9, 9),
      Invoke(10, 10),
      ConstructorBegin(11, 11),
      ConstructorEnd(12, 12),
      Start(13, 13),
      Wait(14, 14),
      Notify(15, 15),
      Join(16, 16),
      Finalize(17, 17),
      Exception(18, 18),
      ReqClassInit(19, 19),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return Branch;
          case 1: return MethodBegin;
          case 2: return MethodEnd;
          case 3: return ClassInitBegin;
          case 4: return ClassInitEnd;
          case 5: return Lock;
          case 6: return Unlock;
          case 7: return Access;
          case 8: return MOPEvent;
          case 9: return InstanceInvoke;
          case 10: return Invoke;
          case 11: return ConstructorBegin;
          case 12: return ConstructorEnd;
          case 13: return Start;
          case 14: return Wait;
          case 15: return Notify;
          case 16: return Join;
          case 17: return Finalize;
          case 18: return Exception;
          case 19: return ReqClassInit;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return rvpredict.logging.Protos.Event.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        Branch, MethodBegin, MethodEnd, ClassInitBegin, ClassInitEnd, Lock, Unlock, Access, MOPEvent, InstanceInvoke, Invoke, ConstructorBegin, ConstructorEnd, Start, Wait, Notify, Join, Finalize, Exception, ReqClassInit, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        rvpredict.logging.Protos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:rvpredict_events.Event.Type)
    }
    
    // required .rvpredict_events.Event.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private rvpredict.logging.Protos.Event.Type type_;
    public boolean hasType() { return hasType; }
    public rvpredict.logging.Protos.Event.Type getType() { return type_; }
    
    // required fixed32 thread_id = 3;
    public static final int THREAD_ID_FIELD_NUMBER = 3;
    private boolean hasThreadId;
    private int threadId_ = 0;
    public boolean hasThreadId() { return hasThreadId; }
    public int getThreadId() { return threadId_; }
    
    // optional string class_name = 4;
    public static final int CLASS_NAME_FIELD_NUMBER = 4;
    private boolean hasClassName;
    private java.lang.String className_ = "";
    public boolean hasClassName() { return hasClassName; }
    public java.lang.String getClassName() { return className_; }
    
    // optional string method_name = 5;
    public static final int METHOD_NAME_FIELD_NUMBER = 5;
    private boolean hasMethodName;
    private java.lang.String methodName_ = "";
    public boolean hasMethodName() { return hasMethodName; }
    public java.lang.String getMethodName() { return methodName_; }
    
    // optional fixed32 object_id = 6;
    public static final int OBJECT_ID_FIELD_NUMBER = 6;
    private boolean hasObjectId;
    private int objectId_ = 0;
    public boolean hasObjectId() { return hasObjectId; }
    public int getObjectId() { return objectId_; }
    
    // optional string field_name = 7;
    public static final int FIELD_NAME_FIELD_NUMBER = 7;
    private boolean hasFieldName;
    private java.lang.String fieldName_ = "";
    public boolean hasFieldName() { return hasFieldName; }
    public java.lang.String getFieldName() { return fieldName_; }
    
    // optional string mopname = 8;
    public static final int MOPNAME_FIELD_NUMBER = 8;
    private boolean hasMopname;
    private java.lang.String mopname_ = "";
    public boolean hasMopname() { return hasMopname; }
    public java.lang.String getMopname() { return mopname_; }
    
    // repeated fixed32 mopids = 9;
    public static final int MOPIDS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> mopids_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getMopidsList() {
      return mopids_;
    }
    public int getMopidsCount() { return mopids_.size(); }
    public int getMopids(int index) {
      return mopids_.get(index);
    }
    
    // optional int32 index = 10;
    public static final int INDEX_FIELD_NUMBER = 10;
    private boolean hasIndex;
    private int index_ = 0;
    public boolean hasIndex() { return hasIndex; }
    public int getIndex() { return index_; }
    
    // optional bool is_write = 11;
    public static final int IS_WRITE_FIELD_NUMBER = 11;
    private boolean hasIsWrite;
    private boolean isWrite_ = false;
    public boolean hasIsWrite() { return hasIsWrite; }
    public boolean getIsWrite() { return isWrite_; }
    
    // optional bool is_static = 12;
    public static final int IS_STATIC_FIELD_NUMBER = 12;
    private boolean hasIsStatic;
    private boolean isStatic_ = false;
    public boolean hasIsStatic() { return hasIsStatic; }
    public boolean getIsStatic() { return isStatic_; }
    
    // optional .rvpredict_events.Location location = 13;
    public static final int LOCATION_FIELD_NUMBER = 13;
    private boolean hasLocation;
    private rvpredict.logging.Protos.Location location_;
    public boolean hasLocation() { return hasLocation; }
    public rvpredict.logging.Protos.Location getLocation() { return location_; }
    
    // repeated fixed32 lockset = 14;
    public static final int LOCKSET_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> lockset_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getLocksetList() {
      return lockset_;
    }
    public int getLocksetCount() { return lockset_.size(); }
    public int getLockset(int index) {
      return lockset_.get(index);
    }
    
    // optional bool is_important = 15;
    public static final int IS_IMPORTANT_FIELD_NUMBER = 15;
    private boolean hasIsImportant;
    private boolean isImportant_ = false;
    public boolean hasIsImportant() { return hasIsImportant; }
    public boolean getIsImportant() { return isImportant_; }
    
    // optional .rvpredict_events.Variable variable = 16;
    public static final int VARIABLE_FIELD_NUMBER = 16;
    private boolean hasVariable;
    private rvpredict.logging.Protos.Variable variable_;
    public boolean hasVariable() { return hasVariable; }
    public rvpredict.logging.Protos.Variable getVariable() { return variable_; }
    
    // repeated string classtack = 17;
    public static final int CLASSTACK_FIELD_NUMBER = 17;
    private java.util.List<java.lang.String> classtack_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getClasstackList() {
      return classtack_;
    }
    public int getClasstackCount() { return classtack_.size(); }
    public java.lang.String getClasstack(int index) {
      return classtack_.get(index);
    }
    
    private void initFields() {
      type_ = rvpredict.logging.Protos.Event.Type.Branch;
      location_ = rvpredict.logging.Protos.Location.getDefaultInstance();
      variable_ = rvpredict.logging.Protos.Variable.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasThreadId) return false;
      if (hasLocation()) {
        if (!getLocation().isInitialized()) return false;
      }
      if (hasVariable()) {
        if (!getVariable().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasThreadId()) {
        output.writeFixed32(3, getThreadId());
      }
      if (hasClassName()) {
        output.writeString(4, getClassName());
      }
      if (hasMethodName()) {
        output.writeString(5, getMethodName());
      }
      if (hasObjectId()) {
        output.writeFixed32(6, getObjectId());
      }
      if (hasFieldName()) {
        output.writeString(7, getFieldName());
      }
      if (hasMopname()) {
        output.writeString(8, getMopname());
      }
      for (int element : getMopidsList()) {
        output.writeFixed32(9, element);
      }
      if (hasIndex()) {
        output.writeInt32(10, getIndex());
      }
      if (hasIsWrite()) {
        output.writeBool(11, getIsWrite());
      }
      if (hasIsStatic()) {
        output.writeBool(12, getIsStatic());
      }
      if (hasLocation()) {
        output.writeMessage(13, getLocation());
      }
      for (int element : getLocksetList()) {
        output.writeFixed32(14, element);
      }
      if (hasIsImportant()) {
        output.writeBool(15, getIsImportant());
      }
      if (hasVariable()) {
        output.writeMessage(16, getVariable());
      }
      for (java.lang.String element : getClasstackList()) {
        output.writeString(17, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasThreadId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, getThreadId());
      }
      if (hasClassName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getClassName());
      }
      if (hasMethodName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMethodName());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, getObjectId());
      }
      if (hasFieldName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getFieldName());
      }
      if (hasMopname()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getMopname());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMopidsList().size();
        size += dataSize;
        size += 1 * getMopidsList().size();
      }
      if (hasIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getIndex());
      }
      if (hasIsWrite()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, getIsWrite());
      }
      if (hasIsStatic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, getIsStatic());
      }
      if (hasLocation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getLocation());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getLocksetList().size();
        size += dataSize;
        size += 1 * getLocksetList().size();
      }
      if (hasIsImportant()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, getIsImportant());
      }
      if (hasVariable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getVariable());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getClasstackList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getClasstackList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static rvpredict.logging.Protos.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rvpredict.logging.Protos.Event prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private rvpredict.logging.Protos.Event result;
      
      // Construct using rvpredict.logging.Protos.Event.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new rvpredict.logging.Protos.Event();
        return builder;
      }
      
      protected rvpredict.logging.Protos.Event internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new rvpredict.logging.Protos.Event();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rvpredict.logging.Protos.Event.getDescriptor();
      }
      
      public rvpredict.logging.Protos.Event getDefaultInstanceForType() {
        return rvpredict.logging.Protos.Event.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public rvpredict.logging.Protos.Event build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private rvpredict.logging.Protos.Event buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public rvpredict.logging.Protos.Event buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.mopids_ != java.util.Collections.EMPTY_LIST) {
          result.mopids_ =
            java.util.Collections.unmodifiableList(result.mopids_);
        }
        if (result.lockset_ != java.util.Collections.EMPTY_LIST) {
          result.lockset_ =
            java.util.Collections.unmodifiableList(result.lockset_);
        }
        if (result.classtack_ != java.util.Collections.EMPTY_LIST) {
          result.classtack_ =
            java.util.Collections.unmodifiableList(result.classtack_);
        }
        rvpredict.logging.Protos.Event returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rvpredict.logging.Protos.Event) {
          return mergeFrom((rvpredict.logging.Protos.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rvpredict.logging.Protos.Event other) {
        if (other == rvpredict.logging.Protos.Event.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (other.hasClassName()) {
          setClassName(other.getClassName());
        }
        if (other.hasMethodName()) {
          setMethodName(other.getMethodName());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasMopname()) {
          setMopname(other.getMopname());
        }
        if (!other.mopids_.isEmpty()) {
          if (result.mopids_.isEmpty()) {
            result.mopids_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.mopids_.addAll(other.mopids_);
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasIsWrite()) {
          setIsWrite(other.getIsWrite());
        }
        if (other.hasIsStatic()) {
          setIsStatic(other.getIsStatic());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (!other.lockset_.isEmpty()) {
          if (result.lockset_.isEmpty()) {
            result.lockset_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.lockset_.addAll(other.lockset_);
        }
        if (other.hasIsImportant()) {
          setIsImportant(other.getIsImportant());
        }
        if (other.hasVariable()) {
          mergeVariable(other.getVariable());
        }
        if (!other.classtack_.isEmpty()) {
          if (result.classtack_.isEmpty()) {
            result.classtack_ = new java.util.ArrayList<java.lang.String>();
          }
          result.classtack_.addAll(other.classtack_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              rvpredict.logging.Protos.Event.Type value = rvpredict.logging.Protos.Event.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 29: {
              setThreadId(input.readFixed32());
              break;
            }
            case 34: {
              setClassName(input.readString());
              break;
            }
            case 42: {
              setMethodName(input.readString());
              break;
            }
            case 53: {
              setObjectId(input.readFixed32());
              break;
            }
            case 58: {
              setFieldName(input.readString());
              break;
            }
            case 66: {
              setMopname(input.readString());
              break;
            }
            case 77: {
              addMopids(input.readFixed32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addMopids(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              setIndex(input.readInt32());
              break;
            }
            case 88: {
              setIsWrite(input.readBool());
              break;
            }
            case 96: {
              setIsStatic(input.readBool());
              break;
            }
            case 106: {
              rvpredict.logging.Protos.Location.Builder subBuilder = rvpredict.logging.Protos.Location.newBuilder();
              if (hasLocation()) {
                subBuilder.mergeFrom(getLocation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocation(subBuilder.buildPartial());
              break;
            }
            case 117: {
              addLockset(input.readFixed32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addLockset(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              setIsImportant(input.readBool());
              break;
            }
            case 130: {
              rvpredict.logging.Protos.Variable.Builder subBuilder = rvpredict.logging.Protos.Variable.newBuilder();
              if (hasVariable()) {
                subBuilder.mergeFrom(getVariable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVariable(subBuilder.buildPartial());
              break;
            }
            case 138: {
              addClasstack(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .rvpredict_events.Event.Type type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public rvpredict.logging.Protos.Event.Type getType() {
        return result.getType();
      }
      public Builder setType(rvpredict.logging.Protos.Event.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = rvpredict.logging.Protos.Event.Type.Branch;
        return this;
      }
      
      // required fixed32 thread_id = 3;
      public boolean hasThreadId() {
        return result.hasThreadId();
      }
      public int getThreadId() {
        return result.getThreadId();
      }
      public Builder setThreadId(int value) {
        result.hasThreadId = true;
        result.threadId_ = value;
        return this;
      }
      public Builder clearThreadId() {
        result.hasThreadId = false;
        result.threadId_ = 0;
        return this;
      }
      
      // optional string class_name = 4;
      public boolean hasClassName() {
        return result.hasClassName();
      }
      public java.lang.String getClassName() {
        return result.getClassName();
      }
      public Builder setClassName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClassName = true;
        result.className_ = value;
        return this;
      }
      public Builder clearClassName() {
        result.hasClassName = false;
        result.className_ = getDefaultInstance().getClassName();
        return this;
      }
      
      // optional string method_name = 5;
      public boolean hasMethodName() {
        return result.hasMethodName();
      }
      public java.lang.String getMethodName() {
        return result.getMethodName();
      }
      public Builder setMethodName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMethodName = true;
        result.methodName_ = value;
        return this;
      }
      public Builder clearMethodName() {
        result.hasMethodName = false;
        result.methodName_ = getDefaultInstance().getMethodName();
        return this;
      }
      
      // optional fixed32 object_id = 6;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public int getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(int value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0;
        return this;
      }
      
      // optional string field_name = 7;
      public boolean hasFieldName() {
        return result.hasFieldName();
      }
      public java.lang.String getFieldName() {
        return result.getFieldName();
      }
      public Builder setFieldName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder clearFieldName() {
        result.hasFieldName = false;
        result.fieldName_ = getDefaultInstance().getFieldName();
        return this;
      }
      
      // optional string mopname = 8;
      public boolean hasMopname() {
        return result.hasMopname();
      }
      public java.lang.String getMopname() {
        return result.getMopname();
      }
      public Builder setMopname(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMopname = true;
        result.mopname_ = value;
        return this;
      }
      public Builder clearMopname() {
        result.hasMopname = false;
        result.mopname_ = getDefaultInstance().getMopname();
        return this;
      }
      
      // repeated fixed32 mopids = 9;
      public java.util.List<java.lang.Integer> getMopidsList() {
        return java.util.Collections.unmodifiableList(result.mopids_);
      }
      public int getMopidsCount() {
        return result.getMopidsCount();
      }
      public int getMopids(int index) {
        return result.getMopids(index);
      }
      public Builder setMopids(int index, int value) {
        result.mopids_.set(index, value);
        return this;
      }
      public Builder addMopids(int value) {
        if (result.mopids_.isEmpty()) {
          result.mopids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.mopids_.add(value);
        return this;
      }
      public Builder addAllMopids(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.mopids_.isEmpty()) {
          result.mopids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.mopids_);
        return this;
      }
      public Builder clearMopids() {
        result.mopids_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 index = 10;
      public boolean hasIndex() {
        return result.hasIndex();
      }
      public int getIndex() {
        return result.getIndex();
      }
      public Builder setIndex(int value) {
        result.hasIndex = true;
        result.index_ = value;
        return this;
      }
      public Builder clearIndex() {
        result.hasIndex = false;
        result.index_ = 0;
        return this;
      }
      
      // optional bool is_write = 11;
      public boolean hasIsWrite() {
        return result.hasIsWrite();
      }
      public boolean getIsWrite() {
        return result.getIsWrite();
      }
      public Builder setIsWrite(boolean value) {
        result.hasIsWrite = true;
        result.isWrite_ = value;
        return this;
      }
      public Builder clearIsWrite() {
        result.hasIsWrite = false;
        result.isWrite_ = false;
        return this;
      }
      
      // optional bool is_static = 12;
      public boolean hasIsStatic() {
        return result.hasIsStatic();
      }
      public boolean getIsStatic() {
        return result.getIsStatic();
      }
      public Builder setIsStatic(boolean value) {
        result.hasIsStatic = true;
        result.isStatic_ = value;
        return this;
      }
      public Builder clearIsStatic() {
        result.hasIsStatic = false;
        result.isStatic_ = false;
        return this;
      }
      
      // optional .rvpredict_events.Location location = 13;
      public boolean hasLocation() {
        return result.hasLocation();
      }
      public rvpredict.logging.Protos.Location getLocation() {
        return result.getLocation();
      }
      public Builder setLocation(rvpredict.logging.Protos.Location value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLocation = true;
        result.location_ = value;
        return this;
      }
      public Builder setLocation(rvpredict.logging.Protos.Location.Builder builderForValue) {
        result.hasLocation = true;
        result.location_ = builderForValue.build();
        return this;
      }
      public Builder mergeLocation(rvpredict.logging.Protos.Location value) {
        if (result.hasLocation() &&
            result.location_ != rvpredict.logging.Protos.Location.getDefaultInstance()) {
          result.location_ =
            rvpredict.logging.Protos.Location.newBuilder(result.location_).mergeFrom(value).buildPartial();
        } else {
          result.location_ = value;
        }
        result.hasLocation = true;
        return this;
      }
      public Builder clearLocation() {
        result.hasLocation = false;
        result.location_ = rvpredict.logging.Protos.Location.getDefaultInstance();
        return this;
      }
      
      // repeated fixed32 lockset = 14;
      public java.util.List<java.lang.Integer> getLocksetList() {
        return java.util.Collections.unmodifiableList(result.lockset_);
      }
      public int getLocksetCount() {
        return result.getLocksetCount();
      }
      public int getLockset(int index) {
        return result.getLockset(index);
      }
      public Builder setLockset(int index, int value) {
        result.lockset_.set(index, value);
        return this;
      }
      public Builder addLockset(int value) {
        if (result.lockset_.isEmpty()) {
          result.lockset_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.lockset_.add(value);
        return this;
      }
      public Builder addAllLockset(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.lockset_.isEmpty()) {
          result.lockset_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.lockset_);
        return this;
      }
      public Builder clearLockset() {
        result.lockset_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bool is_important = 15;
      public boolean hasIsImportant() {
        return result.hasIsImportant();
      }
      public boolean getIsImportant() {
        return result.getIsImportant();
      }
      public Builder setIsImportant(boolean value) {
        result.hasIsImportant = true;
        result.isImportant_ = value;
        return this;
      }
      public Builder clearIsImportant() {
        result.hasIsImportant = false;
        result.isImportant_ = false;
        return this;
      }
      
      // optional .rvpredict_events.Variable variable = 16;
      public boolean hasVariable() {
        return result.hasVariable();
      }
      public rvpredict.logging.Protos.Variable getVariable() {
        return result.getVariable();
      }
      public Builder setVariable(rvpredict.logging.Protos.Variable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVariable = true;
        result.variable_ = value;
        return this;
      }
      public Builder setVariable(rvpredict.logging.Protos.Variable.Builder builderForValue) {
        result.hasVariable = true;
        result.variable_ = builderForValue.build();
        return this;
      }
      public Builder mergeVariable(rvpredict.logging.Protos.Variable value) {
        if (result.hasVariable() &&
            result.variable_ != rvpredict.logging.Protos.Variable.getDefaultInstance()) {
          result.variable_ =
            rvpredict.logging.Protos.Variable.newBuilder(result.variable_).mergeFrom(value).buildPartial();
        } else {
          result.variable_ = value;
        }
        result.hasVariable = true;
        return this;
      }
      public Builder clearVariable() {
        result.hasVariable = false;
        result.variable_ = rvpredict.logging.Protos.Variable.getDefaultInstance();
        return this;
      }
      
      // repeated string classtack = 17;
      public java.util.List<java.lang.String> getClasstackList() {
        return java.util.Collections.unmodifiableList(result.classtack_);
      }
      public int getClasstackCount() {
        return result.getClasstackCount();
      }
      public java.lang.String getClasstack(int index) {
        return result.getClasstack(index);
      }
      public Builder setClasstack(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.classtack_.set(index, value);
        return this;
      }
      public Builder addClasstack(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.classtack_.isEmpty()) {
          result.classtack_ = new java.util.ArrayList<java.lang.String>();
        }
        result.classtack_.add(value);
        return this;
      }
      public Builder addAllClasstack(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.classtack_.isEmpty()) {
          result.classtack_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.classtack_);
        return this;
      }
      public Builder clearClasstack() {
        result.classtack_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rvpredict_events.Event)
    }
    
    static {
      defaultInstance = new Event(true);
      rvpredict.logging.Protos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rvpredict_events.Event)
  }
  
  public static final class Location extends
      com.google.protobuf.GeneratedMessage {
    // Use Location.newBuilder() to construct.
    private Location() {
      initFields();
    }
    private Location(boolean noInit) {}
    
    private static final Location defaultInstance;
    public static Location getDefaultInstance() {
      return defaultInstance;
    }
    
    public Location getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Location_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Location_fieldAccessorTable;
    }
    
    // required string class_name = 1;
    public static final int CLASS_NAME_FIELD_NUMBER = 1;
    private boolean hasClassName;
    private java.lang.String className_ = "";
    public boolean hasClassName() { return hasClassName; }
    public java.lang.String getClassName() { return className_; }
    
    // required string method_name = 2;
    public static final int METHOD_NAME_FIELD_NUMBER = 2;
    private boolean hasMethodName;
    private java.lang.String methodName_ = "";
    public boolean hasMethodName() { return hasMethodName; }
    public java.lang.String getMethodName() { return methodName_; }
    
    // required int32 jimple_line = 3;
    public static final int JIMPLE_LINE_FIELD_NUMBER = 3;
    private boolean hasJimpleLine;
    private int jimpleLine_ = 0;
    public boolean hasJimpleLine() { return hasJimpleLine; }
    public int getJimpleLine() { return jimpleLine_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasClassName) return false;
      if (!hasMethodName) return false;
      if (!hasJimpleLine) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasClassName()) {
        output.writeString(1, getClassName());
      }
      if (hasMethodName()) {
        output.writeString(2, getMethodName());
      }
      if (hasJimpleLine()) {
        output.writeInt32(3, getJimpleLine());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasClassName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getClassName());
      }
      if (hasMethodName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMethodName());
      }
      if (hasJimpleLine()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getJimpleLine());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static rvpredict.logging.Protos.Location parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Location parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Location parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Location parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Location parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Location parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Location parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Location parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Location parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Location parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rvpredict.logging.Protos.Location prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private rvpredict.logging.Protos.Location result;
      
      // Construct using rvpredict.logging.Protos.Location.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new rvpredict.logging.Protos.Location();
        return builder;
      }
      
      protected rvpredict.logging.Protos.Location internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new rvpredict.logging.Protos.Location();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rvpredict.logging.Protos.Location.getDescriptor();
      }
      
      public rvpredict.logging.Protos.Location getDefaultInstanceForType() {
        return rvpredict.logging.Protos.Location.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public rvpredict.logging.Protos.Location build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private rvpredict.logging.Protos.Location buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public rvpredict.logging.Protos.Location buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        rvpredict.logging.Protos.Location returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rvpredict.logging.Protos.Location) {
          return mergeFrom((rvpredict.logging.Protos.Location)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rvpredict.logging.Protos.Location other) {
        if (other == rvpredict.logging.Protos.Location.getDefaultInstance()) return this;
        if (other.hasClassName()) {
          setClassName(other.getClassName());
        }
        if (other.hasMethodName()) {
          setMethodName(other.getMethodName());
        }
        if (other.hasJimpleLine()) {
          setJimpleLine(other.getJimpleLine());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setClassName(input.readString());
              break;
            }
            case 18: {
              setMethodName(input.readString());
              break;
            }
            case 24: {
              setJimpleLine(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string class_name = 1;
      public boolean hasClassName() {
        return result.hasClassName();
      }
      public java.lang.String getClassName() {
        return result.getClassName();
      }
      public Builder setClassName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClassName = true;
        result.className_ = value;
        return this;
      }
      public Builder clearClassName() {
        result.hasClassName = false;
        result.className_ = getDefaultInstance().getClassName();
        return this;
      }
      
      // required string method_name = 2;
      public boolean hasMethodName() {
        return result.hasMethodName();
      }
      public java.lang.String getMethodName() {
        return result.getMethodName();
      }
      public Builder setMethodName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMethodName = true;
        result.methodName_ = value;
        return this;
      }
      public Builder clearMethodName() {
        result.hasMethodName = false;
        result.methodName_ = getDefaultInstance().getMethodName();
        return this;
      }
      
      // required int32 jimple_line = 3;
      public boolean hasJimpleLine() {
        return result.hasJimpleLine();
      }
      public int getJimpleLine() {
        return result.getJimpleLine();
      }
      public Builder setJimpleLine(int value) {
        result.hasJimpleLine = true;
        result.jimpleLine_ = value;
        return this;
      }
      public Builder clearJimpleLine() {
        result.hasJimpleLine = false;
        result.jimpleLine_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rvpredict_events.Location)
    }
    
    static {
      defaultInstance = new Location(true);
      rvpredict.logging.Protos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rvpredict_events.Location)
  }
  
  public static final class Variable extends
      com.google.protobuf.GeneratedMessage {
    // Use Variable.newBuilder() to construct.
    private Variable() {
      initFields();
    }
    private Variable(boolean noInit) {}
    
    private static final Variable defaultInstance;
    public static Variable getDefaultInstance() {
      return defaultInstance;
    }
    
    public Variable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Variable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rvpredict.logging.Protos.internal_static_rvpredict_events_Variable_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      StaticFieldAcc(0, 0),
      FieldAcc(1, 1),
      ArrayAcc(2, 2),
      ImpureCall(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return StaticFieldAcc;
          case 1: return FieldAcc;
          case 2: return ArrayAcc;
          case 3: return ImpureCall;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return rvpredict.logging.Protos.Variable.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        StaticFieldAcc, FieldAcc, ArrayAcc, ImpureCall, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        rvpredict.logging.Protos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:rvpredict_events.Variable.Type)
    }
    
    // required .rvpredict_events.Variable.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private rvpredict.logging.Protos.Variable.Type type_;
    public boolean hasType() { return hasType; }
    public rvpredict.logging.Protos.Variable.Type getType() { return type_; }
    
    // required string class_name = 2;
    public static final int CLASS_NAME_FIELD_NUMBER = 2;
    private boolean hasClassName;
    private java.lang.String className_ = "";
    public boolean hasClassName() { return hasClassName; }
    public java.lang.String getClassName() { return className_; }
    
    // optional string field_name = 3;
    public static final int FIELD_NAME_FIELD_NUMBER = 3;
    private boolean hasFieldName;
    private java.lang.String fieldName_ = "";
    public boolean hasFieldName() { return hasFieldName; }
    public java.lang.String getFieldName() { return fieldName_; }
    
    // optional fixed32 object_ID = 4;
    public static final int OBJECT_ID_FIELD_NUMBER = 4;
    private boolean hasObjectID;
    private int objectID_ = 0;
    public boolean hasObjectID() { return hasObjectID; }
    public int getObjectID() { return objectID_; }
    
    // optional int32 index = 5;
    public static final int INDEX_FIELD_NUMBER = 5;
    private boolean hasIndex;
    private int index_ = 0;
    public boolean hasIndex() { return hasIndex; }
    public int getIndex() { return index_; }
    
    private void initFields() {
      type_ = rvpredict.logging.Protos.Variable.Type.StaticFieldAcc;
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasClassName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasClassName()) {
        output.writeString(2, getClassName());
      }
      if (hasFieldName()) {
        output.writeString(3, getFieldName());
      }
      if (hasObjectID()) {
        output.writeFixed32(4, getObjectID());
      }
      if (hasIndex()) {
        output.writeInt32(5, getIndex());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasClassName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getClassName());
      }
      if (hasFieldName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getFieldName());
      }
      if (hasObjectID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, getObjectID());
      }
      if (hasIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getIndex());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static rvpredict.logging.Protos.Variable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Variable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Variable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rvpredict.logging.Protos.Variable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Variable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Variable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rvpredict.logging.Protos.Variable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Variable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rvpredict.logging.Protos.Variable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rvpredict.logging.Protos.Variable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rvpredict.logging.Protos.Variable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private rvpredict.logging.Protos.Variable result;
      
      // Construct using rvpredict.logging.Protos.Variable.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new rvpredict.logging.Protos.Variable();
        return builder;
      }
      
      protected rvpredict.logging.Protos.Variable internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new rvpredict.logging.Protos.Variable();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rvpredict.logging.Protos.Variable.getDescriptor();
      }
      
      public rvpredict.logging.Protos.Variable getDefaultInstanceForType() {
        return rvpredict.logging.Protos.Variable.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public rvpredict.logging.Protos.Variable build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private rvpredict.logging.Protos.Variable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public rvpredict.logging.Protos.Variable buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        rvpredict.logging.Protos.Variable returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rvpredict.logging.Protos.Variable) {
          return mergeFrom((rvpredict.logging.Protos.Variable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rvpredict.logging.Protos.Variable other) {
        if (other == rvpredict.logging.Protos.Variable.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasClassName()) {
          setClassName(other.getClassName());
        }
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasObjectID()) {
          setObjectID(other.getObjectID());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              rvpredict.logging.Protos.Variable.Type value = rvpredict.logging.Protos.Variable.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 18: {
              setClassName(input.readString());
              break;
            }
            case 26: {
              setFieldName(input.readString());
              break;
            }
            case 37: {
              setObjectID(input.readFixed32());
              break;
            }
            case 40: {
              setIndex(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .rvpredict_events.Variable.Type type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public rvpredict.logging.Protos.Variable.Type getType() {
        return result.getType();
      }
      public Builder setType(rvpredict.logging.Protos.Variable.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = rvpredict.logging.Protos.Variable.Type.StaticFieldAcc;
        return this;
      }
      
      // required string class_name = 2;
      public boolean hasClassName() {
        return result.hasClassName();
      }
      public java.lang.String getClassName() {
        return result.getClassName();
      }
      public Builder setClassName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClassName = true;
        result.className_ = value;
        return this;
      }
      public Builder clearClassName() {
        result.hasClassName = false;
        result.className_ = getDefaultInstance().getClassName();
        return this;
      }
      
      // optional string field_name = 3;
      public boolean hasFieldName() {
        return result.hasFieldName();
      }
      public java.lang.String getFieldName() {
        return result.getFieldName();
      }
      public Builder setFieldName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder clearFieldName() {
        result.hasFieldName = false;
        result.fieldName_ = getDefaultInstance().getFieldName();
        return this;
      }
      
      // optional fixed32 object_ID = 4;
      public boolean hasObjectID() {
        return result.hasObjectID();
      }
      public int getObjectID() {
        return result.getObjectID();
      }
      public Builder setObjectID(int value) {
        result.hasObjectID = true;
        result.objectID_ = value;
        return this;
      }
      public Builder clearObjectID() {
        result.hasObjectID = false;
        result.objectID_ = 0;
        return this;
      }
      
      // optional int32 index = 5;
      public boolean hasIndex() {
        return result.hasIndex();
      }
      public int getIndex() {
        return result.getIndex();
      }
      public Builder setIndex(int value) {
        result.hasIndex = true;
        result.index_ = value;
        return this;
      }
      public Builder clearIndex() {
        result.hasIndex = false;
        result.index_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rvpredict_events.Variable)
    }
    
    static {
      defaultInstance = new Variable(true);
      rvpredict.logging.Protos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rvpredict_events.Variable)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rvpredict_events_Events_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rvpredict_events_Events_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rvpredict_events_Event_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rvpredict_events_Event_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rvpredict_events_Location_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rvpredict_events_Location_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rvpredict_events_Variable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rvpredict_events_Variable_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!rvpredict/logging/predictor.proto\022\020rvp" +
      "redict_events\"0\n\006Events\022&\n\005event\030\001 \003(\0132\027" +
      ".rvpredict_events.Event\"\260\005\n\005Event\022*\n\004typ" +
      "e\030\001 \002(\0162\034.rvpredict_events.Event.Type\022\021\n" +
      "\tthread_id\030\003 \002(\007\022\022\n\nclass_name\030\004 \001(\t\022\023\n\013" +
      "method_name\030\005 \001(\t\022\021\n\tobject_id\030\006 \001(\007\022\022\n\n" +
      "field_name\030\007 \001(\t\022\017\n\007mopname\030\010 \001(\t\022\016\n\006mop" +
      "ids\030\t \003(\007\022\r\n\005index\030\n \001(\005\022\020\n\010is_write\030\013 \001" +
      "(\010\022\021\n\tis_static\030\014 \001(\010\022,\n\010location\030\r \001(\0132" +
      "\032.rvpredict_events.Location\022\017\n\007lockset\030\016",
      " \003(\007\022\024\n\014is_important\030\017 \001(\010\022,\n\010variable\030\020" +
      " \001(\0132\032.rvpredict_events.Variable\022\021\n\tclas" +
      "stack\030\021 \003(\t\"\254\002\n\004Type\022\n\n\006Branch\020\000\022\017\n\013Meth" +
      "odBegin\020\001\022\r\n\tMethodEnd\020\002\022\022\n\016ClassInitBeg" +
      "in\020\003\022\020\n\014ClassInitEnd\020\004\022\010\n\004Lock\020\005\022\n\n\006Unlo" +
      "ck\020\006\022\n\n\006Access\020\007\022\014\n\010MOPEvent\020\010\022\022\n\016Instan" +
      "ceInvoke\020\t\022\n\n\006Invoke\020\n\022\024\n\020ConstructorBeg" +
      "in\020\013\022\022\n\016ConstructorEnd\020\014\022\t\n\005Start\020\r\022\010\n\004W" +
      "ait\020\016\022\n\n\006Notify\020\017\022\010\n\004Join\020\020\022\014\n\010Finalize\020" +
      "\021\022\r\n\tException\020\022\022\020\n\014ReqClassInit\020\023\"H\n\010Lo",
      "cation\022\022\n\nclass_name\030\001 \002(\t\022\023\n\013method_nam" +
      "e\030\002 \002(\t\022\023\n\013jimple_line\030\003 \002(\005\"\313\001\n\010Variabl" +
      "e\022-\n\004type\030\001 \002(\0162\037.rvpredict_events.Varia" +
      "ble.Type\022\022\n\nclass_name\030\002 \002(\t\022\022\n\nfield_na" +
      "me\030\003 \001(\t\022\021\n\tobject_ID\030\004 \001(\007\022\r\n\005index\030\005 \001" +
      "(\005\"F\n\004Type\022\022\n\016StaticFieldAcc\020\000\022\014\n\010FieldA" +
      "cc\020\001\022\014\n\010ArrayAcc\020\002\022\016\n\nImpureCall\020\003B\033\n\021rv" +
      "predict.loggingB\006Protos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rvpredict_events_Events_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rvpredict_events_Events_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rvpredict_events_Events_descriptor,
              new java.lang.String[] { "Event", },
              rvpredict.logging.Protos.Events.class,
              rvpredict.logging.Protos.Events.Builder.class);
          internal_static_rvpredict_events_Event_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_rvpredict_events_Event_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rvpredict_events_Event_descriptor,
              new java.lang.String[] { "Type", "ThreadId", "ClassName", "MethodName", "ObjectId", "FieldName", "Mopname", "Mopids", "Index", "IsWrite", "IsStatic", "Location", "Lockset", "IsImportant", "Variable", "Classtack", },
              rvpredict.logging.Protos.Event.class,
              rvpredict.logging.Protos.Event.Builder.class);
          internal_static_rvpredict_events_Location_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_rvpredict_events_Location_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rvpredict_events_Location_descriptor,
              new java.lang.String[] { "ClassName", "MethodName", "JimpleLine", },
              rvpredict.logging.Protos.Location.class,
              rvpredict.logging.Protos.Location.Builder.class);
          internal_static_rvpredict_events_Variable_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_rvpredict_events_Variable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rvpredict_events_Variable_descriptor,
              new java.lang.String[] { "Type", "ClassName", "FieldName", "ObjectID", "Index", },
              rvpredict.logging.Protos.Variable.class,
              rvpredict.logging.Protos.Variable.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
