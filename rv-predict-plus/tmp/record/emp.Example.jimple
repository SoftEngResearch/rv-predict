public class emp.Example extends java.lang.Object
{
    java.util.Random r;
    int x;
    boolean b;
    int[] a;
    static int TIMES;
    emp.Example$MyThread t1;
    emp.Example$MyThread t2;

    static void <clinit>()
    {
        java.lang.Int rv_local1;

        <emp.Example: int TIMES> = 10;
        rv_local1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(1, null, 1, rv_local1, 1);
        return;
    }

    public void <init>()
    {
        emp.Example r0;

        r0 := @this: emp.Example;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<emp.Example: int x> = 0;
        r0.<emp.Example: boolean b> = 0;
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.InterruptedException
    {
        java.lang.String[] r0;
        emp.Example $r1, r2;
        int[] r3, $r5, rv_local1, rv_local2, rv_local3, rv_local6;
        java.lang.String r4, $r13;
        java.util.Random $r6, rv_local9;
        emp.Example$MyThread $r7, $r8, $r9, $r10, $r11, $r12, rv_local11, rv_local12, rv_local13, rv_local14, rv_local15, rv_local16;
        int $i0, rv_local4, rv_local7;
        java.io.PrintStream $r14, rv_local18;
        java.lang.Int rv_local5, rv_local8, rv_local10, rv_local17;

        r0 := @parameter0: java.lang.String[];
        $r1 = new emp.Example;
        specialinvoke $r1.<emp.Example: void <init>()>();
        r2 = $r1;
        $r5 = newarray (int)[2];
        r2.<emp.Example: int[] a> = $r5;
        rv_local1 = $r5;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(2, r2, 2, rv_local1, 1);
        r3 = r2.<emp.Example: int[] a>;
        rv_local2 = r3;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(3, r2, 2, rv_local2, 0);
        r3[0] = 10;
        rv_local4 = 0;
        rv_local5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
        staticinvoke <rvpredict.logging.RecordRT: void logArrayAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(4, r3, rv_local4, rv_local5, 1);
        r3[1] = 20;
        rv_local7 = 1;
        rv_local8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20);
        staticinvoke <rvpredict.logging.RecordRT: void logArrayAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(5, r3, rv_local7, rv_local8, 1);
        $r6 = new java.util.Random;
        specialinvoke $r6.<java.util.Random: void <init>()>();
        r2.<emp.Example: java.util.Random r> = $r6;
        rv_local9 = $r6;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(6, r2, 4, rv_local9, 1);
        r2.<emp.Example: int x> = 0;
        rv_local10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(7, r2, 5, rv_local10, 1);
        $r7 = new emp.Example$MyThread;
        specialinvoke $r7.<emp.Example$MyThread: void <init>(emp.Example,int)>(r2, 1);
        r2.<emp.Example: emp.Example$MyThread t1> = $r7;
        rv_local11 = $r7;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(8, r2, 6, rv_local11, 1);
        $r8 = new emp.Example$MyThread;
        specialinvoke $r8.<emp.Example$MyThread: void <init>(emp.Example,int)>(r2, 2);
        r2.<emp.Example: emp.Example$MyThread t2> = $r8;
        rv_local12 = $r8;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(9, r2, 7, rv_local12, 1);
        $r9 = r2.<emp.Example: emp.Example$MyThread t1>;
        rv_local13 = $r9;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(10, r2, 6, rv_local13, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logStart(int,java.lang.Object)>(11, $r9);
        virtualinvoke $r9.<emp.Example$MyThread: void start()>();
        $r10 = r2.<emp.Example: emp.Example$MyThread t2>;
        rv_local14 = $r10;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(12, r2, 7, rv_local14, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logStart(int,java.lang.Object)>(13, $r10);
        virtualinvoke $r10.<emp.Example$MyThread: void start()>();
        $r11 = r2.<emp.Example: emp.Example$MyThread t1>;
        rv_local15 = $r11;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(14, r2, 6, rv_local15, 0);
        virtualinvoke $r11.<emp.Example$MyThread: void join()>();
        staticinvoke <rvpredict.logging.RecordRT: void logJoin(int,java.lang.Object)>(15, $r11);
        $r12 = r2.<emp.Example: emp.Example$MyThread t2>;
        rv_local16 = $r12;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(16, r2, 7, rv_local16, 0);
        virtualinvoke $r12.<emp.Example$MyThread: void join()>();
        staticinvoke <rvpredict.logging.RecordRT: void logJoin(int,java.lang.Object)>(17, $r12);
        $i0 = r2.<emp.Example: int x>;
        rv_local17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(18, r2, 5, rv_local17, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(19);
        if $i0 != 0 goto label0;

        $r13 = "true";
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(20);
        goto label1;

     label0:
        $r13 = "false";

     label1:
        r4 = $r13;
        $r14 = <java.lang.System: java.io.PrintStream out>;
        rv_local18 = $r14;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(21, null, 8, rv_local18, 0);
        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(r4);
        return;
    }
}
