public class fse.MyExampleThread extends java.lang.Thread
{
    int id;

    void <init>(int)
    {
        fse.MyExampleThread r0;
        int i0;
        java.io.PrintStream $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: fse.MyExampleThread;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Thread: void <init>()>();
        r0.<fse.MyExampleThread: int id> = i0;
        $r1 = <java.lang.System: java.io.PrintStream out>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("thread ");
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starting.");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
        return;
    }

    public void run()
    {
        fse.MyExampleThread r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Integer $r1, $r2, $r3, $r4, rv_local1, rv_local3, rv_local4, rv_local5, rv_local6, rv_local8, rv_local9, rv_local10;
        java.lang.Exception $r5, r6;
        java.io.PrintStream $r7, rv_local11;
        java.lang.StringBuilder $r8, $r9;
        java.lang.String $r10;
        java.lang.Int rv_local2, rv_local7;

        r0 := @this: fse.MyExampleThread;
        i0 = 0;

     label0:
        i1 = 0;
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(16);
        goto label4;

     label1:
        $r1 = <fse.MyExample: java.lang.Integer value>;
        rv_local6 = $r1;
        rv_local1 = $r1;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(11, null, 1, rv_local6, 0);
        i2 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();
        i4 = i2 + 1;
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(17);
        if i1 < 9998 goto label2;

        $i5 = r0.<fse.MyExampleThread: int id>;
        rv_local7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(12, r0, 3, rv_local7, 0);
        rv_local2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(18);
        if $i5 != 2 goto label2;

        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label2:
        i0 = i1;
        $r2 = <fse.MyExample: java.lang.Integer value>;
        rv_local8 = $r2;
        rv_local3 = $r2;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(13, null, 1, rv_local8, 0);
        $i6 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();
        $i7 = i4 - 1;
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(19);
        if $i6 == $i7 goto label3;

        $r3 = <fse.MyExample: java.lang.Integer value>;
        rv_local9 = $r3;
        rv_local4 = $r3;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(14, null, 1, rv_local9, 0);
        $i8 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        $i9 = $i8 - 5000;
        i3 = 1 / $i9;

     label3:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);
        <fse.MyExample: java.lang.Integer value> = $r4;
        rv_local10 = $r4;
        rv_local5 = $r4;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(15, null, 1, rv_local10, 1);
        i1 = i1 + 1;

     label4:
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(20);
        if i1 < 10000 goto label1;

     label5:
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(21);
        goto label7;

     label6:
        $r5 := @caughtexception;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(11, null, 1, rv_local1, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(12, r0, 3, rv_local2, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(13, null, 1, rv_local3, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(14, null, 1, rv_local4, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(15, null, 1, rv_local5, 1);
        r6 = $r5;
        $r7 = <java.lang.System: java.io.PrintStream out>;
        rv_local11 = $r7;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(22, null, 2, rv_local11, 0);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Died at ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);
        virtualinvoke r6.<java.lang.Exception: void printStackTrace()>();
        staticinvoke <java.lang.System: void exit(int)>(1);

     label7:
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(11, null, 1, rv_local1, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(12, r0, 3, rv_local2, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(13, null, 1, rv_local3, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(14, null, 1, rv_local4, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(15, null, 1, rv_local5, 1);
        return;

        catch java.lang.Exception from label0 to label5 with label6;
    }
}
