public class fse.MyExample extends java.lang.Object
{
    public static volatile java.lang.Integer value;

    static void <clinit>()
    {
        java.lang.Integer $r0, rv_local1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        <fse.MyExample: java.lang.Integer value> = $r0;
        rv_local1 = $r0;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(1, null, 1, rv_local1, 1);
        return;
    }

    public void <init>()
    {
        fse.MyExample r0;

        r0 := @this: fse.MyExample;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int i0;
        fse.MyExampleThread r1, r2, $r4, $r5;
        java.lang.InterruptedException r3, $r6;
        java.io.PrintStream $r7, rv_local1, rv_local3;
        java.lang.StringBuilder $r8, $r11;
        java.lang.Integer $r9, rv_local2, rv_local4;
        java.lang.String $r10, $r12;

        r0 := @parameter0: java.lang.String[];
        i0 = 0;
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(10);
        goto label5;

     label0:
        $r4 = new fse.MyExampleThread;
        specialinvoke $r4.<fse.MyExampleThread: void <init>(int)>(1);
        r1 = $r4;
        $r5 = new fse.MyExampleThread;
        specialinvoke $r5.<fse.MyExampleThread: void <init>(int)>(2);
        r2 = $r5;
        staticinvoke <rvpredict.logging.RecordRT: void logStart(int,java.lang.Object)>(4, r2);
        staticinvoke <rvpredict.logging.RecordRT: void logStart(int,java.lang.Object)>(4, r2);
        virtualinvoke r2.<java.lang.Thread: void start()>();
        staticinvoke <rvpredict.logging.RecordRT: void logStart(int,java.lang.Object)>(5, r1);
        staticinvoke <rvpredict.logging.RecordRT: void logStart(int,java.lang.Object)>(5, r1);
        virtualinvoke r1.<java.lang.Thread: void start()>();

     label1:
        virtualinvoke r1.<java.lang.Thread: void join()>();
        staticinvoke <rvpredict.logging.RecordRT: void logJoin(int,java.lang.Object)>(6, r1);
        staticinvoke <rvpredict.logging.RecordRT: void logJoin(int,java.lang.Object)>(6, r1);
        virtualinvoke r2.<java.lang.Thread: void join()>();
        staticinvoke <rvpredict.logging.RecordRT: void logJoin(int,java.lang.Object)>(7, r2);
        staticinvoke <rvpredict.logging.RecordRT: void logJoin(int,java.lang.Object)>(7, r2);

     label2:
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(3);
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(3);
        goto label4;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>();
        staticinvoke <java.lang.System: void exit(int)>(1);

     label4:
        $r7 = <java.lang.System: java.io.PrintStream out>;
        rv_local3 = $r7;
        rv_local1 = $r7;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(8, null, 2, rv_local1, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(8, null, 2, rv_local3, 0);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("value = ");
        $r9 = <fse.MyExample: java.lang.Integer value>;
        rv_local4 = $r9;
        rv_local2 = $r9;
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(9, null, 1, rv_local2, 0);
        staticinvoke <rvpredict.logging.RecordRT: void logFieldAcc(int,java.lang.Object,int,java.lang.Object,boolean)>(9, null, 1, rv_local4, 0);
        $r10 = virtualinvoke $r9.<java.lang.Integer: java.lang.String toString()>();
        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);
        i0 = i0 + 1;

     label5:
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(2);
        staticinvoke <rvpredict.logging.RecordRT: void logBranch(int)>(2);
        if i0 < 1 goto label0;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
